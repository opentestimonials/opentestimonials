import { Dialog, Transition } from '@headlessui/react';
import { ClipboardIcon, XIcon } from '@heroicons/react/outline';
import { Fragment } from 'react';
import toast from 'react-hot-toast';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';

export default function EmbedHelpModal(props: {
  subdomain: string;
  open: boolean;
  onClose: () => void;
  appear?: boolean;
}) {
  const stylesheetCode = `<link rel="stylesheet" href="https://opentestimonials.com/api/embed/styles.css" type="text/css" />`;
  const clientSideRenderingCode = `<div id="open-testimonials" />\n<script>(async()=>{let a=document.getElementById("open-testimonials"),b=await (await fetch("https://opentestimonials.com/api/embed/edge/demo")).text();a.innerHTML=b})()</script>`;
  function copyToClipboard(data: string) {
    navigator.clipboard.writeText(data);
    toast.success('Copied to clipboard');
  }
  return (
    <>
      <Transition.Root show={props.open} as={Fragment} appear={props.appear}>
        <Dialog as="div" className="relative z-10" onClose={props.onClose}>
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-150"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-in duration-150"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-neutral-700 bg-opacity-50 backdrop-blur-sm transition-opacity" />
          </Transition.Child>

          <div className="fixed inset-0 z-10 overflow-y-auto">
            <div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
              <Transition.Child
                as={Fragment}
                enter="ease-out duration-150"
                enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                enterTo="opacity-100 translate-y-0 sm:scale-100"
                leave="ease-in duration-150"
                leaveFrom="opacity-100 translate-y-0 sm:scale-100"
                leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
              >
                <Dialog.Panel className="relative transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-3xl sm:p-6">
                  <div className="absolute top-0 right-0 hidden pt-4 pr-4 sm:block">
                    <button
                      type="button"
                      className="rounded-md bg-white text-neutral-400 hover:text-neutral-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-500 focus-visible:ring-offset-2"
                      onClick={props.onClose}
                    >
                      <span className="sr-only">Close</span>
                      <XIcon className="h-6 w-6" aria-hidden="true" />
                    </button>
                  </div>
                  <div className="flex grow sm:flex sm:items-start">
                    <div className="mt-3 w-full text-center sm:mt-0 sm:text-left">
                      <Dialog.Title
                        as="h3"
                        className="text-lg font-medium leading-6 text-neutral-900"
                      >
                        Embed testimonials
                      </Dialog.Title>
                      <div className="mt-2">
                        <p className="text-sm text-neutral-500">
                          Below are the details to embed testimonials onto your
                          website. If you need more help you can view the{' '}
                          <a
                            href="/docs/embed-testimonials"
                            target="_blank"
                            className="text-blue-500"
                          >
                            documentation
                          </a>{' '}
                          or{' '}
                          <a
                            href="mailto:lawrencechen2002@gmail.com"
                            className="text-blue-500"
                          >
                            contact support
                          </a>
                          .
                        </p>
                      </div>

                      <div className="mt-2">
                        <div className="flex items-center px-2 pt-2 text-sm font-semibold text-neutral-600">
                          <span>Stylesheet</span>
                          <button
                            className="ml-auto mr-0"
                            onClick={() => copyToClipboard(stylesheetCode)}
                          >
                            <ClipboardIcon className="w-5" />
                          </button>
                        </div>
                        <div
                          className="overflow-hidden text-xs"
                          onClick={() => copyToClipboard(stylesheetCode)}
                        >
                          <SyntaxHighlighter language="html">
                            {stylesheetCode}
                          </SyntaxHighlighter>
                        </div>
                      </div>

                      <div className="mt-2">
                        <div className="flex items-center px-2 pt-2 text-sm font-semibold text-neutral-600">
                          <span>Client side rendering</span>
                          <button
                            className="ml-auto mr-0"
                            onClick={() =>
                              copyToClipboard(clientSideRenderingCode)
                            }
                          >
                            <ClipboardIcon className="w-5" />
                          </button>
                        </div>
                        <div
                          className="overflow-hidden text-xs"
                          onClick={() =>
                            copyToClipboard(clientSideRenderingCode)
                          }
                        >
                          <SyntaxHighlighter language="html">
                            {clientSideRenderingCode}
                          </SyntaxHighlighter>
                        </div>
                      </div>
                    </div>
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </Dialog>
      </Transition.Root>
    </>
  );
}
