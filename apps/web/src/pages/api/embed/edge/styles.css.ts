import type { NextRequest } from 'next/server';
import { generateStyles } from '../../../../utils/generateStyles';

export const config = {
  runtime: 'experimental-edge',
};
export default async function handler(req: NextRequest) {
  try {
    const url = new URL(req.url);
    const _preflight = url.searchParams.get('preflight');
    const preflight =
      typeof _preflight === 'string' ? _preflight === 'true' : true;
    const html = await (
      await fetch(`${req.nextUrl}/api/embed/edge/demo`)
    ).text();
    const styles = generateStyles(html, preflight);

    return new Response(styles, {
      status: 200,
      headers: {
        'Accept-Encoding': 'gzip',
        'Access-Control-Allow-Origin': '*',
        'Cache-Control': 's-maxage=1, stale-while-revalidate=3154000000',
      },
    });
  } catch (e) {
    console.error('Failed to render', e);
  }
}
