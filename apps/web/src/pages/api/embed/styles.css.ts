import { env } from '@/env.mjs';
import { generateStyles } from '@/utils/generateStyles';
import fetch from 'cross-fetch';
import { NextApiRequest, NextApiResponse } from 'next';

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    const preflight =
      typeof req.query.preflight === 'string'
        ? req.query.preflight === 'true'
        : true;
    const html = await (await fetch(`${env.SERVER_URL}/embed/demo`)).text();
    const styles = generateStyles(html, preflight);

    res
      .status(200)
      .setHeader(
        'Cache-control',
        's-maxage=1, stale-while-revalidate=3154000000'
      )
      .setHeader('Accept-Encoding', 'gzip')
      // todo: only allow cors for registered hosts?
      .setHeader('Access-Control-Allow-Origin', '*')
      .send(styles);
  } catch (e) {
    console.error('Failed to render', e);
  }
}
