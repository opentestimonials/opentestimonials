import { Faqs } from '@/components/Faqs';
import { Footer } from '@/components/Footer';
import { Header } from '@/components/Header';
import { Hero } from '@/components/Hero';
import ExpandableTestimonialsHome from '@/components/opentestimonials/ExpandableTestimonialsHome';
import { Pricing } from '@/components/Pricing';
import { PrimaryFeatures } from '@/components/PrimaryFeatures';
import { appRouter } from '@/server/router';
import { createProxySSGHelpers } from '@trpc/react-query/ssg';
import type { GetStaticProps } from 'next';
import Head from 'next/head';
import superjson from 'superjson';

export default function Home() {
  return (
    <>
      <Head>
        <title>
          Open Testimonials - Collect testimonials from your Airtable.
        </title>
        <meta
          name="description"
          content="Collect and embed customer testimonials from your Airtable. 100% Open Source."
        />
      </Head>
      <Header />
      <main>
        <Hero />
        <div className="my-8 mx-auto max-w-7xl p-3 ">
          <ExpandableTestimonialsHome
            subdomain="demo"
            style={{ height: '100vh' }}
          />
        </div>
        <PrimaryFeatures />
        {/* <SecondaryFeatures /> */}
        {/* <CallToAction /> */}
        {/* <Testimonials collection="demo" /> */}
        {/* <Testimonials /> */}
        <Pricing theme="dark" />
        <Faqs />
      </main>
      <Footer />
    </>
  );
}

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: {} as any,
    transformer: superjson, // optional - adds superjson serialization
  });

  await ssg.embed.testimonials.prefetch({
    subdomain: 'demo',
  });

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
    revalidate: 1,
  };
};
