import Head from 'next/head';

import { Faqs } from '@/components/Faqs';
import { Footer } from '@/components/Footer';
import { Header } from '@/components/Header';
import { Hero } from '@/components/Hero';
import ExpandableTestimonials from '@/components/opentestimonials/ExpandableTestimonials';
import { Pricing } from '@/components/Pricing';
import { PrimaryFeatures } from '@/components/PrimaryFeatures';
// import { Testimonials } from '@/components/Testimonials';
import { appRouter } from '@/server/router';
import { createSSGHelpers } from '@trpc/react/ssg';
import type { GetStaticProps } from 'next';
import superjson from 'superjson';

export default function Home() {
  return (
    <>
      <Head>
        <title>
          Open Testimonials - Collect testimonials from your Airtable.
        </title>
        <meta
          name="description"
          content="Most bookkeeping software is accurate, but hard to use. We make the opposite trade-off, and hope you donâ€™t get audited."
        />
      </Head>
      <Header />
      <main>
        <Hero />
        <ExpandableTestimonials collection="demo" />
        <PrimaryFeatures />
        {/* <SecondaryFeatures /> */}
        {/* <CallToAction /> */}
        {/* <Testimonials collection="demo" /> */}
        {/* <Testimonials /> */}
        <Pricing />
        <Faqs />
      </main>
      <Footer />
    </>
  );
}

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = createSSGHelpers({
    router: appRouter,
    ctx: {} as any,
    transformer: superjson, // optional - adds superjson serialization
  });
  await ssg.fetchQuery('embed.testimonials', {
    subdomain: 'demo',
  });

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
    revalidate: 1,
  };
};
