import AuthGuard from '@/components/AuthGuard';
import { Button } from '@/components/Button';
import HomeTabNav from '@/components/dashboard/HomeTabNav';
import Nav from '@/components/dashboard/Nav';
import { TextField } from '@/components/Fields';
import { StarterPlan, TeamsPlan } from '@/components/Pricing';
import { InferMutationInput, trpc } from '@/utils/trpc';
import clsx from 'clsx';
import { useSession } from 'next-auth/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React from 'react';
import { ExternalLink } from 'react-feather';

function TextBadge(props: {
  children: React.ReactNode;
  variant?: 'gray' | 'blue';
}) {
  const { variant = 'gray' } = props;
  return (
    <span
      className={clsx(
        'mx-[2px] inline-block rounded-full py-1 px-2 text-xs font-medium',
        {
          'bg-gray-200 text-gray-800': variant === 'gray',
          'bg-blue-600 text-white': variant === 'blue',
        }
      )}
    >
      {props.children}
    </span>
  );
}

export default function Settings() {
  const router = useRouter();
  const session = useSession();
  const mutation = trpc.useMutation(['app.createCheckoutSession']);

  const hasLifetimePlanQuery = trpc.useQuery(['app.hasLifetimePlan']);

  if (!hasLifetimePlanQuery.data) {
    return null;
  }

  // const subscriptionQuery = trpc.useQuery(['app.subscription']);

  // if (!subscriptionQuery.data) {
  //   return null;
  // }

  async function handlePlan(
    planName: InferMutationInput<'app.createCheckoutSession'>['planName']
  ) {
    const email = session?.data?.user?.email;
    if (!email) {
      return;
    }
    try {
      const { url } = await mutation.mutateAsync({ planName, email });
      router.push(url);
    } catch (e) {
      alert(
        'Something went wrong. Please refresh and try again. If the problem persists, please contact support.'
      );
    }
  }

  return (
    <>
      <AuthGuard callbackUrl={router.asPath} />
      <Head>
        <title>Billing - Open Testimonials</title>
      </Head>
      <Nav />

      <HomeTabNav />

      {!hasLifetimePlanQuery.data && (
        <div className="bg-black-10 fixed inset-0 top-[248px] z-50 flex h-[calc(100%-248px)] items-start justify-center bg-neutral-700 bg-opacity-50 opacity-100 backdrop-blur-sm transition-opacity">
          <div className="mx-4 rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl sm:my-8 sm:w-full sm:max-w-3xl sm:p-6">
            <h3 className="text-lg font-medium leading-6 text-neutral-900">
              Coming soon!
            </h3>
            <div className="mt-2">
              <p className="text-sm text-neutral-500">
                I&apos;m still working on setting Stripe up. If you want to be
                an early supporter (and lock in the{' '}
                <strong>lifetime $150 single payment</strong> early-supporter
                plan), please use this payment link.
              </p>
              <p className="mt-2 text-sm text-neutral-500">
                This includes unlimited testimonials, unlimited collections, and
                personal support from me.
              </p>
              <p className="mt-2 text-sm text-neutral-500">
                If you have any questions or need help setting up Open
                Testimonials on your website, please{' '}
                <a
                  href="mailto:lawrencechen2002@gmail.com"
                  className="text-blue-500"
                >
                  contact me
                </a>
                .
              </p>
              <div className="mt-4">
                <Button
                  type="button"
                  name="planName"
                  value="personal"
                  color="pink"
                  loading={mutation.isLoading}
                  disabled={!session?.data?.user?.email}
                  className="w-full"
                  onClick={() => handlePlan('lifetime')}
                >
                  Payment ($150, once) <ExternalLink className="ml-2 h-4 w-4" />
                </Button>
              </div>
            </div>
          </div>
        </div>
      )}

      {hasLifetimePlanQuery.data && (
        <div className="bg-black-10 fixed inset-0 top-[248px] z-50 flex h-[calc(100%-248px)] items-start justify-center bg-neutral-700 bg-opacity-50 opacity-100 backdrop-blur-sm transition-opacity">
          <div className="mx-4 rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl sm:my-8 sm:w-full sm:max-w-3xl sm:p-6">
            <h3 className="text-lg font-medium leading-6 text-neutral-900">
              You are on the lifetime plan.
            </h3>
            <div className="mt-2">
              <p className="text-sm text-neutral-500">
                Thank you for being an early supporter!
              </p>
              <p className="mt-2 text-sm text-neutral-500">
                If you have any questions or need help setting up Open
                Testimonials on your website, please{' '}
                <a
                  href="mailto:lawrencechen2002@gmail.com"
                  className="text-blue-500"
                >
                  contact me
                </a>
                .
              </p>
            </div>
          </div>
        </div>
      )}

      <div className="border-b">
        <div className="mx-auto flex w-full max-w-7xl items-center justify-between py-12 px-4">
          <h1 className="text-3xl font-medium">Billing</h1>
        </div>
      </div>

      <div className="mx-auto flex w-full max-w-7xl flex-col items-center overflow-hidden p-4">
        <div className="my-6 w-full max-w-3xl rounded border">
          <div className="p-5">
            <h3 className="text-xl font-semibold">Plan</h3>
            <p className="mt-3 text-sm text-neutral-700">
              You are on the <TextBadge variant="gray">Free</TextBadge> plan.
              The next payment of $0 will occur on the first of every month.
            </p>
            {/* <div className="my-4 text-xl font-semibold">$24</div>
            <div className="text-sm text-neutral-600">Billed monthly</div> */}
          </div>
          <div className="flex h-14 items-center rounded-b-[3px] border-t bg-neutral-50 px-5 py-2 text-neutral-700">
            <div className="flex grow flex-col items-start justify-between sm:flex-row sm:items-center">
              <p className="pb-4 text-[13px] sm:pb-0">
                Update your subscription on Stripe.
              </p>
              <Button
                type="button"
                className="w-full !py-1.5 text-[13px] md:w-auto"
              >
                Update subscription
              </Button>
            </div>
          </div>
        </div>
        <div className="my-6 w-full max-w-3xl rounded border">
          <div className="py-3 px-5">
            <h3 className="text-xl font-semibold">Your Email</h3>
            <div className="mt-3 text-sm text-neutral-700">
              <TextField
                id="settings-form-email"
                className="mt-2"
                type="email"
                readOnly
                autoComplete="email"
                defaultValue={session?.data?.user?.email ?? ''}
              />
            </div>
            {/* <div className="my-4 text-xl font-semibold">$24</div>
            <div className="text-sm text-neutral-600">Billed monthly</div> */}
          </div>
          <div className="flex h-14 items-center rounded-b-[3px] border-t bg-neutral-50 px-5 py-2 text-neutral-700">
            <div className="flex grow flex-col items-start justify-between sm:flex-row sm:items-center">
              <p className="pb-4 text-[13px] sm:pb-0">
                Your account is connected to a third party provider. Please{' '}
                <a
                  href="mailto:lawrencechen2002@gmail.com"
                  target="_blank"
                  rel="noreferrer"
                  className="text-blue-500"
                >
                  email support
                </a>{' '}
                if you need help migrating your account.
              </p>
              <Button
                type="button"
                className="hidden w-full !py-1.5 text-[13px] md:w-auto"
                hidden
              >
                Update email
              </Button>
            </div>
          </div>
        </div>

        <div className="mt-8 grid grid-cols-1 gap-4 md:grid-cols-2">
          <StarterPlan
            customAction={
              <div className="mt-8 w-full">
                <Button
                  type="submit"
                  name="planName"
                  value="personal"
                  variant="solid"
                  color="white"
                  aria-label={`Get started with the Starter plan for $15 / month`}
                  loading={mutation.isLoading}
                  disabled={!session?.data?.user?.email}
                  className="w-full"
                  onClick={() => handlePlan('personal')}
                >
                  Continue
                </Button>
              </div>
            }
          />
          <TeamsPlan
            customAction={
              <div className="mt-8 w-full">
                <Button
                  type="submit"
                  name="planName"
                  value="teams"
                  variant={'solid'}
                  aria-label={`Get started with the Temas plan for $299 / month`}
                  loading={mutation.isLoading}
                  disabled={!session?.data?.user?.email}
                  className="w-full"
                  onClick={() => handlePlan('teams')}
                >
                  Continue
                </Button>
              </div>
            }
          />
        </div>
      </div>
    </>
  );
}
