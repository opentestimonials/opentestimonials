import { Button } from '@/components/Button';
import EmbedHelpModal from '@/components/dashboard/EmbedHelpModal';
import Nav from '@/components/dashboard/Nav';
import { GridSkeleton } from '@/components/dashboard/GridSkeletons';
import { FallbackSkeleton } from '@/components/FallbackSkeleton';
import GridTestimonials, {
  useTestimonials,
} from '@/components/opentestimonials/GridTestimonials';
import { trpc } from '@/utils/trpc';
import clsx from 'clsx';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useRef } from 'react';
import { ExternalLink } from 'react-feather';
import { useIntersection } from 'react-use';

function Actions(props: { airtableUrl?: string; subdomain?: string }) {
  return (
    <div className="flex items-center space-x-3">
      <FallbackSkeleton
        fallback={
          <div
            className="rounded-full bg-neutral-100"
            style={{ width: 137.12, height: 40 }}
          />
        }
      >
        {props.airtableUrl && (
          <Button
            href={props.airtableUrl}
            variant="outline"
            target="_blank"
            rel="noopener noreferrer"
          >
            Edit Airtable
            <ExternalLink className="ml-2 h-4 w-4" />
          </Button>
        )}
      </FallbackSkeleton>
      <FallbackSkeleton
        fallback={
          <div
            className="rounded-full bg-neutral-100"
            style={{ width: 79.02, height: 40 }}
          />
        }
      >
        {props.subdomain && (
          <Button
            href={`/dashboard/${props.subdomain}?embed=true`}
            scroll={false}
          >
            Embed
          </Button>
        )}
      </FallbackSkeleton>
    </div>
  );
}

export default function Subdomain() {
  const router = useRouter();
  const subdomain = String(router.query.subdomain);
  const collection = trpc.useQuery(
    [
      'app.collection',
      {
        subdomain: subdomain,
      },
    ],
    {
      onError: () => {
        router.push('/');
      },
    }
  );
  const testimonials = useTestimonials(
    {
      subdomain: subdomain,
    },
    {
      onError: () => {
        router.push('/dashboard');
      },
    }
  );
  const intersectionRef = useRef(null);
  const intersection = useIntersection(intersectionRef, {
    root: null,
    rootMargin: '0px',
    threshold: 0,
  });
  const open = router.query['embed'] === 'true';
  if (!router.query.subdomain) return null;

  return (
    <>
      <Head>
        <title>{subdomain} - Dashboard - Open Testimonials</title>
      </Head>
      <Nav
        breadcrumbs={{
          loading: !router.query.subdomain,
          items: [{ label: subdomain, href: `/dashboard/${subdomain}` }],
        }}
      />
      <div className="border-y" ref={intersectionRef}>
        <div className="mx-auto flex w-full max-w-7xl items-center justify-between py-12 px-4">
          <h1 className="text-3xl font-medium">{subdomain}</h1>
          <div>
            <Actions
              airtableUrl={collection.data?.airtableUrl}
              subdomain={collection.data?.subdomain}
            />
          </div>
        </div>
      </div>
      <div className="grow bg-neutral-50">
        <div>
          <div className="mb-4 pt-8 backdrop-blur-sm">
            <div className="mx-auto flex w-full max-w-7xl items-center px-4">
              <h2 className="text-xl font-semibold">Customization</h2>
            </div>
          </div>
          <div className="mx-auto my-4 max-w-7xl p-4">
            Coming soon!
            {/* {testimonials && <GridTestimonials data={testimonials} />} */}
          </div>
        </div>

        <div className="isolate bg-white">
          <div className="sticky top-0 z-50 border-t bg-white/90 py-4 backdrop-blur-sm">
            <div className="mx-auto flex w-full max-w-7xl items-center px-4">
              <h2 className="text-xl font-semibold">Preview</h2>
              <div
                className={clsx('ml-auto mr-0 transition duration-75', {
                  // '-translate-y-10 opacity-0': !headerGone,
                  // 'translate-y-0 opacity-100': headerGone,
                })}
              >
                <Actions
                  airtableUrl={collection.data?.airtableUrl}
                  subdomain={collection.data?.subdomain}
                />
              </div>
            </div>
          </div>
          <div className="mx-auto my-4 min-h-screen max-w-7xl p-4">
            <FallbackSkeleton fallback={<GridSkeleton />}>
              {testimonials && <GridTestimonials data={testimonials} />}
            </FallbackSkeleton>
          </div>
        </div>
      </div>

      <EmbedHelpModal
        subdomain={subdomain}
        onClose={() =>
          router.push(`/dashboard/${subdomain}`, undefined, {
            scroll: false,
          })
        }
        open={open}
      />
    </>
  );
}
