// https://airtable.com/appwL5H2tkEYlMjrB/tblCB3O3lSjXAfqrA/viwuz4HltNUpUD47e?blocks=hide
import { Button } from '@/components/Button';
import Nav from '@/components/dashboard/Nav';
import { ErrorMessage, TextField } from '@/components/Fields';
import useDebounce from '@/hooks/useDebounce';
import airtableTemplate from '@/images/screenshots/airtableTemplate.png';
import airtableApiKey from '@/images/screenshots/airtableApiKey.png';
import { trpc } from '@/utils/trpc';
import {
  CreateCollectionValidator,
  type CreateCollection,
} from '@/validators/collection';
import { zodResolver } from '@hookform/resolvers/zod';
import { motion } from 'framer-motion';
import { useSession } from 'next-auth/react';
import Image from 'next/future/image';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { FormEvent, useEffect, useState } from 'react';
import { ExternalLink } from 'react-feather';
import { useForm, useWatch } from 'react-hook-form';
import { useInterval } from 'react-use';

function AirtableDuplicateBaseImage() {
  const [zoomed, setZoomed] = useState(false);
  const [hovered, setHovered] = useState(false);

  function onClick() {
    setZoomed(!zoomed);
  }

  useInterval(() => !hovered && setZoomed(!zoomed), 3000);

  return (
    <motion.div
      onMouseOver={() => setHovered(true)}
      onMouseOut={() => setHovered(false)}
      onClick={onClick}
      animate={{
        scale: zoomed ? 5 : 1,
        y: zoomed ? '200%' : 0,
        x: zoomed ? '-50%' : 0,
      }}
      transition={{
        stiffness: 80,
      }}
    >
      <Image
        src={airtableTemplate}
        alt="Duplicate airtable template"
        // width={2347}
        // height={1244}
        // layout="fixed"
        priority={true}
        unoptimized
      />
    </motion.div>
  );
}
function AirtableApiKeyImage() {
  const [zoomed, setZoomed] = useState(false);
  const [hovered, setHovered] = useState(false);

  function onClick() {
    setZoomed(!zoomed);
  }

  useInterval(() => !hovered && setZoomed(!zoomed), 3000);

  return (
    <motion.div
      onMouseOver={() => setHovered(true)}
      onMouseOut={() => setHovered(false)}
      onClick={onClick}
      animate={{
        scale: zoomed ? 5 : 1,
        y: zoomed ? '-125%' : 0,
        x: zoomed ? '50%' : 0,
      }}
      transition={{
        stiffness: 80,
      }}
    >
      <Image
        src={airtableApiKey}
        alt="Copy Airtable API Key"
        // width={2347}
        // height={1244}
        // layout="fixed"
        priority={true}
        unoptimized
      />
    </motion.div>
  );
}

export default function Setup() {
  const router = useRouter();
  const session = useSession();

  useEffect(() => {
    if (session.status === 'unauthenticated') {
      router.replace(`/login?callbackUrl=${router.pathname}`);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const {
    register,
    handleSubmit,
    formState: { errors },
    trigger,
    setError,
    clearErrors,
    control,
  } = useForm<CreateCollection>({
    resolver: zodResolver(CreateCollectionValidator),
  });
  const createCollectionMutation = trpc.useMutation(['app.collection'], {
    onSuccess: (data) => {
      router.push(`/dashboard/${data.subdomain}`);
    },
  });
  const subdomainExistsMutation = trpc.useMutation(['app.isSubdomainValid']);

  const subdomain = useWatch<CreateCollection>({
    control,
    name: 'subdomain',
  });
  const debouncedSubdomain = useDebounce(subdomain, 300);
  const [isValidSubdomain, setIsValidSubdomain] = useState(false);
  useEffect(() => {
    if (debouncedSubdomain) {
      subdomainExistsMutation.mutate(
        { subdomain: debouncedSubdomain },
        {
          onSuccess(data) {
            setIsValidSubdomain(data.valid);
            if (!data.valid) {
              setError('subdomain', {
                message: 'Subdomain is already in use',
              });
            } else {
              clearErrors('subdomain');
            }
          },
        }
      );
    }
  }, [debouncedSubdomain]);

  if (session.status === 'loading') {
    return null;
  }
  const step = Number(router.query.step ?? 1);

  const onSubmit = async (e: FormEvent) => {
    if (step === 1) {
      e.preventDefault();
      const { valid } = await subdomainExistsMutation.mutateAsync({
        subdomain,
      });
      if (!valid) {
        return;
      }
      return nextStep(2, ['ownerId', 'subdomain']);
    }

    if (step === 2) {
      e.preventDefault();
      return nextStep(3, ['airtableUrl']);
    }

    handleSubmit((data) => {
      createCollectionMutation.mutate(data);
    })(e);
  };

  async function nextStep(
    step: number,
    validateFields?: Array<keyof CreateCollection>
  ) {
    const valid = await trigger(validateFields, { shouldFocus: true });
    if (valid) {
      router.push(`/setup?step=${step}`);
    }
  }

  return (
    <>
      <Head>
        <title>Set up - Open Testimonials</title>
      </Head>

      <Nav />

      <div className="mx-auto w-full max-w-7xl px-4">
        <div className="mx-auto w-full max-w-lg pb-8">
          <form onSubmit={onSubmit}>
            <div
              className="grid grid-cols-1 gap-y-8 gap-x-6 sm:grid-cols-2 [&[hidden]]:hidden"
              hidden={!(step === 1)}
            >
              <h1 className="col-span-full text-3xl font-semibold">
                Create testimonial collection
              </h1>
              <input
                type="hidden"
                {...register('ownerId')}
                value={session.data?.user?.id}
              />
              <div className="mt-1 sm:col-span-2 sm:mt-0">
                <label
                  htmlFor="subdomain"
                  className="mb-3 block text-sm font-medium text-gray-700"
                >
                  Choose a subdomain
                </label>
                <div className="flex max-w-lg rounded-md">
                  <label
                    htmlFor="subdomain"
                    className="inline-flex items-center rounded-l-md border border-r-0 border-gray-200 bg-gray-50 px-3 text-gray-500 sm:text-sm"
                  >
                    opentestimonials.com/
                  </label>
                  <input
                    type="text"
                    {...register('subdomain')}
                    name="subdomain"
                    id="subdomain"
                    autoComplete="username"
                    className="block w-full appearance-none rounded-r-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-blue-500 sm:text-sm"
                  />
                </div>
                <ErrorMessage error={errors.subdomain} />
              </div>
              {/* <p className="col-span-full"></p> */}

              <div className="col-span-full">
                <Button
                  type="submit"
                  variant="solid"
                  color="blue"
                  className="w-full disabled:opacity-50"
                  disabled={!isValidSubdomain || !!errors.subdomain}
                  loading={subdomainExistsMutation.isLoading}
                >
                  Continue &rarr;
                </Button>
              </div>
            </div>
            <div
              className="grid grid-cols-1 gap-y-8 gap-x-6 sm:grid-cols-2 [&[hidden]]:hidden"
              hidden={!(step === 2)}
            >
              <h1 className="col-span-full text-3xl font-semibold">
                Set up Airtable
              </h1>

              <div className="prose-sm col-span-full">
                <ol className="list-decimal">
                  <li>
                    <a
                      href="https://www.airtable.com/universe/expgXZ8m0p07R7rc9/open-testimonials"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-500"
                    >
                      Copy Airtable Template
                    </a>
                  </li>
                  <li>Click "Use template"</li>
                  <li>Add to your workspace</li>
                  <li>
                    Copy the full airtable.com URL and paste it at the bottom of
                    this page
                  </li>
                </ol>
              </div>

              <div className="col-span-full">
                <Button
                  href="https://www.airtable.com/universe/expgXZ8m0p07R7rc9/open-testimonials"
                  target="_blank"
                  rel="noopener noreferrer"
                  color="pink"
                  className="w-full"
                >
                  Copy Airtable Template
                  <ExternalLink className="ml-2 h-4 w-4" />
                </Button>
              </div>

              <div className="col-span-full overflow-hidden">
                <AirtableDuplicateBaseImage />
              </div>

              <TextField
                className="col-span-full"
                {...register('airtableUrl')}
                label="Airtable URL"
                id="airtableUrl"
                autoComplete="off"
                placeholder="https://airtable.com/appwL5H2tkEYlMjrB/tblCB3O3lSjXAfqrA/viwuz4HltNUpUD47e"
                error={errors.airtableUrl}
              />
              <div className="col-span-full flex gap-4">
                <Button
                  variant="outline"
                  color="slate"
                  className="w-full"
                  href="/setup"
                >
                  Back
                </Button>
                <Button
                  type="submit"
                  variant="solid"
                  color="blue"
                  className="w-full"
                  loading={createCollectionMutation.isLoading}
                >
                  Continue &rarr;
                </Button>
              </div>
            </div>
            <div
              className="grid grid-cols-1 gap-y-8 gap-x-6 sm:grid-cols-2 [&[hidden]]:hidden"
              hidden={!(step === 3)}
            >
              <h1 className="col-span-full text-3xl font-semibold">
                Add Airtable API Key
              </h1>

              <div className="prose-sm col-span-full">
                <ol className="list-decimal">
                  <li>
                    <a
                      href="https://airtable.com/account"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-500"
                    >
                      Open your account page
                    </a>
                  </li>
                  <li>Click "Generate API Key"</li>
                  <li>
                    Copy the text highlighted in purple (it should look like
                    "key**************")
                  </li>
                  <li>Paste it at the bottom of this page</li>
                </ol>
              </div>

              <div className="col-span-full">
                <Button
                  href={`https://airtable.com/account`}
                  target="_blank"
                  rel="noopener noreferrer"
                  color="pink"
                  className="w-full"
                >
                  Open account page
                  <ExternalLink className="ml-2 h-4 w-4" />
                </Button>
              </div>

              <div className="col-span-full">
                <a>Generate API key</a>
                <Image
                  src="https://support.airtable.com/hc/article_attachments/360095668794/generate_api.gif"
                  width={764}
                  height={145}
                  priority={true}
                  alt="Add"
                  unoptimized
                  className="w-full"
                />
              </div>

              <div className="col-span-full overflow-hidden">
                <AirtableApiKeyImage />
              </div>

              <TextField
                className="col-span-full"
                {...register('airtableApiKey')}
                label="Airtable API key"
                id="airtableApiKey"
                autoComplete="off"
                placeholder="key**************"
                error={errors.airtableUrl}
              />
              <div className="col-span-full flex gap-4">
                <Button
                  variant="outline"
                  color="slate"
                  className="w-full"
                  href="/setup?step=2"
                >
                  Back
                </Button>
                <Button
                  type="submit"
                  variant="solid"
                  color="blue"
                  className="w-full"
                  loading={createCollectionMutation.isLoading}
                >
                  Create &rarr;
                </Button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </>
  );
}
