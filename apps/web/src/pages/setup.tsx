// https://airtable.com/appwL5H2tkEYlMjrB/tblCB3O3lSjXAfqrA/viwuz4HltNUpUD47e?blocks=hide
import { Button } from '@/components/Button';
import { ErrorMessage, TextField } from '@/components/Fields';
import { trpc } from '@/utils/trpc';
import { useSession } from 'next-auth/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import {
  type CreateCollection,
  CreateCollectionValidator,
} from '@/validators/collection';
import Nav from '@/components/dashboard/Nav';

export default function Setup() {
  const router = useRouter();
  const session = useSession();

  useEffect(() => {
    if (session.status === 'unauthenticated') {
      router.replace(`/login?callbackUrl=${router.pathname}`);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  const { data } = trpc.useQuery(['app.hello']);
  const { data: secret } = trpc.useQuery(['app.getSecretMessage']);
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<CreateCollection>({
    resolver: zodResolver(CreateCollectionValidator),
  });
  const mutation = trpc.useMutation(['app.collection'], {
    onSuccess: (data) => {
      router.push(`/dashboard/${data.subdomain}`);
    },
  });

  if (session.status === 'loading') {
    return null;
  }

  const onSubmit = handleSubmit((data) => {
    mutation.mutate(data);
  });

  return (
    <>
      <Head>
        <title>Set up - Open Testimonials</title>
      </Head>

      <Nav />

      <div className="mx-auto w-full max-w-7xl px-4">
        <div className="mx-auto w-full max-w-lg">
          <h1 className="text-3xl font-semibold">
            Create testimonial collection
          </h1>

          <form
            onSubmit={onSubmit}
            className="mt-10 grid grid-cols-1 gap-y-8 gap-x-6 sm:grid-cols-2"
          >
            <input
              type="hidden"
              {...register('ownerId')}
              value={session.data?.user?.id}
            />
            <div className="mt-1 sm:col-span-2 sm:mt-0">
              <label
                htmlFor="subdomain"
                className="mb-3 block text-sm font-medium text-gray-700"
              >
                Subdomain
              </label>
              <div className="flex max-w-lg rounded-md">
                <label
                  htmlFor="subdomain"
                  className="inline-flex items-center rounded-l-md border border-r-0 border-gray-200 bg-gray-50 px-3 text-gray-500 sm:text-sm"
                >
                  opentestimonials.com/
                </label>
                <input
                  type="text"
                  {...register('subdomain')}
                  name="subdomain"
                  id="subdomain"
                  autoComplete="username"
                  className="block w-full appearance-none rounded-r-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-blue-500 sm:text-sm"
                />
              </div>
              <ErrorMessage error={errors.subdomain} />
            </div>
            <TextField
              className="col-span-full"
              {...register('airtableUrl')}
              label="Airtable URL"
              id="airtableUrl"
              type="url"
              autoComplete="off"
              placeholder="https://airtable.com/appwL5H2tkEYlMjrB/tblCB3O3lSjXAfqrA/viwuz4HltNUpUD47e"
              error={errors.airtableUrl}
            />
            <div className="col-span-full">
              <Button
                type="submit"
                variant="solid"
                color="blue"
                className="w-full"
              >
                Create &rarr;
              </Button>
            </div>
          </form>
        </div>
      </div>
    </>
  );
}
