// src/pages/_app.tsx
import { getBaseUrl } from '@/utils/trpc';
import { withTRPC } from '@trpc/next';
import { SessionProvider, useSession } from 'next-auth/react';
import type { AppType } from 'next/dist/shared/lib/utils';
import Script from 'next/script';
import { useEffect } from 'react';
import { Toaster } from 'react-hot-toast';
import superjson from 'superjson';
import type { AppRouter } from '../server/router';
import '../styles/globals.css';

function SessionHelper() {
  const session = useSession();
  useEffect(() => {
    if (session.status !== 'loading') {
      window.localStorage.setItem(
        'next-auth.signed-in',
        String(Boolean(session))
      );
    }
  }, [session]);
  return null;
}

const MyApp: AppType = ({
  Component,
  pageProps: { session, ...pageProps },
}) => {
  return (
    <>
      {/* <script defer data-domain="opentestimonials.com" src="https://plausible.io/js/plausible.js"></script>
       */}
      <Script id="plausible" src="https://plausible.io/js/plausible.js" />
      <SessionProvider session={session}>
        <SessionHelper />
        <Component {...pageProps} />
      </SessionProvider>
      <Toaster />
    </>
  );
};

export default withTRPC<AppRouter>({
  config({ ctx }) {
    /**
     * If you want to use SSR, you need to use the server's full URL
     * @link https://trpc.io/docs/ssr
     */
    const url = `${getBaseUrl()}/api/trpc`;

    return {
      url,
      transformer: superjson,
      /**
       * @link https://react-query.tanstack.com/reference/QueryClient
       */
      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },
    };
  },
  /**
   * @link https://trpc.io/docs/ssr
   */
  ssr: false,
})(MyApp);
