import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';
import { client } from './utils/trpc';

// This function can be marked `async` if using `await` inside
export async function middleware(req: NextRequest) {
  // if (request)
  const subdomain = req.nextUrl.pathname.split('/').pop();

  // const html = await fetch(`${req.nextUrl.origin}/embed/${subdomain}`).then(
  //   (r) => r.text()
  // );
  // const testimonials = await client.query('embed.testimonials', { subdomain: String(subdomain) });
  // const slugFetch = await fetch(`${req.nextUrl.origin}/api/get-url/${subdomain}`);
  // if (slugFetch.status === 404) {
  //   return NextResponse.redirect(req.nextUrl.origin);
  // }
  // return NextResponse.redirect(new URL('/about-2', req.url));
  // return NextResponse.json({
  //   html,
  // });
  return;
}

// See "Matching Paths" below to learn more
// export const config = {
//   matcher: '/api/embed/:subdomain*',
// };
