import * as z from "zod"
import { CompleteUser, RelatedUserModel } from "./index"

export const CollectionModel = z.object({
  id: z.string(),
  ownerId: z.string(),
  airtableUrl: z.string(),
  airtableApiKey: z.string().nullish(),
  airtableBase: z.string().nullish(),
  airtableTable: z.string().nullish(),
  subdomain: z.string(),
})

export interface CompleteCollection extends z.infer<typeof CollectionModel> {
  owner: CompleteUser
}

/**
 * RelatedCollectionModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedCollectionModel: z.ZodSchema<CompleteCollection> = z.lazy(() => CollectionModel.extend({
  owner: RelatedUserModel,
}))
